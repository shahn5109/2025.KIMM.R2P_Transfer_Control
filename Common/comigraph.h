#if !defined(AFX_COMIGRAPH_H__6B3FB032_0DCC_4AF7_9A82_D81DF99A9217__INCLUDED_)
#define AFX_COMIGRAPH_H__6B3FB032_0DCC_4AF7_9A82_D81DF99A9217__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CComiGraph wrapper class

class CComiGraph : public CWnd
{
protected:
	DECLARE_DYNCREATE(CComiGraph)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x861fdcff, 0x33ad, 0x4445, { 0xaa, 0xef, 0x5, 0xda, 0xeb, 0x61, 0x47, 0xdf } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	unsigned long GetPlotBackColor();
	void SetPlotBackColor(unsigned long);
	COleFont GetAxisTitleFont();
	void SetAxisTitleFont(LPDISPATCH);
	short GetFrameStyle();
	void SetFrameStyle(short);
	long GetStandardFrameID();
	void SetStandardFrameID(long);
	unsigned long GetGraphFrameColor();
	void SetGraphFrameColor(unsigned long);
	unsigned long GetMajorGridColor();
	void SetMajorGridColor(unsigned long);
	unsigned long GetMinorGridColor();
	void SetMinorGridColor(unsigned long);
	unsigned long GetGraphTitleColor();
	void SetGraphTitleColor(unsigned long);
	COleFont GetGraphTitleFont();
	void SetGraphTitleFont(LPDISPATCH);
	COleFont GetTickLabelFont();
	void SetTickLabelFont(LPDISPATCH);
	COleFont GetCursorValueFont();
	void SetCursorValueFont(LPDISPATCH);
	COleFont GetLegendTextFont();
	void SetLegendTextFont(LPDISPATCH);
	BOOL GetGraphTitleVisible();
	void SetGraphTitleVisible(BOOL);
	CString GetGraphTitle();
	void SetGraphTitle(LPCTSTR);
	short GetGraphTitlePosition();
	void SetGraphTitlePosition(short);
	long GetFrameOffsetLeft();
	void SetFrameOffsetLeft(long);
	long GetFrameOffsetTop();
	void SetFrameOffsetTop(long);
	long GetFrameOffsetRight();
	void SetFrameOffsetRight(long);
	long GetFrameOffsetBottom();
	void SetFrameOffsetBottom(long);
	short GetNumDivisionMajorX();
	void SetNumDivisionMajorX(short);
	short GetNumDivisionMajorY();
	void SetNumDivisionMajorY(short);
	short GetNumDivisionMinorX();
	void SetNumDivisionMinorX(short);
	short GetNumDivisionMinorY();
	void SetNumDivisionMinorY(short);
	long GetMajorGridLineStyle();
	void SetMajorGridLineStyle(long);
	long GetMinorGridLineStyle();
	void SetMinorGridLineStyle(long);
	long GetMajorTickLength();
	void SetMajorTickLength(long);
	long GetMajorTickWidth();
	void SetMajorTickWidth(long);
	long GetMinorTickLength();
	void SetMinorTickLength(long);
	long GetMinorTickWidth();
	void SetMinorTickWidth(long);
	BOOL GetMajorGridXVisible();
	void SetMajorGridXVisible(BOOL);
	BOOL GetMinorGridXVisible();
	void SetMinorGridXVisible(BOOL);
	BOOL GetMajorTickVisible();
	void SetMajorTickVisible(BOOL);
	BOOL GetMinorTickVisible();
	void SetMinorTickVisible(BOOL);
	long GetTargetXAxis();
	void SetTargetXAxis(long);
	CString GetXAxisTitle();
	void SetXAxisTitle(LPCTSTR);
	short GetXAxisPosition();
	void SetXAxisPosition(short);
	short GetXAxisScaleMode();
	void SetXAxisScaleMode(short);
	unsigned long GetXAxisScaleColor();
	void SetXAxisScaleColor(unsigned long);
	unsigned long GetXAxisTitleColor();
	void SetXAxisTitleColor(unsigned long);
	unsigned long GetXAxisTickLabelColor();
	void SetXAxisTickLabelColor(unsigned long);
	double GetXAxisRangeMin();
	void SetXAxisRangeMin(double);
	double GetXAxisRangeMax();
	void SetXAxisRangeMax(double);
	BOOL GetXAxisVisible();
	void SetXAxisVisible(BOOL);
	BOOL GetXAxisTitleVisible();
	void SetXAxisTitleVisible(BOOL);
	BOOL GetXAxisTickLabelVisible();
	void SetXAxisTickLabelVisible(BOOL);
	BOOL GetMajorGridYVisible();
	void SetMajorGridYVisible(BOOL);
	BOOL GetMinorGridYVisible();
	void SetMinorGridYVisible(BOOL);
	BOOL GetXAxisMinorTickVisible();
	void SetXAxisMinorTickVisible(BOOL);
	long GetTargetYAxis();
	void SetTargetYAxis(long);
	CString GetYAxisTitle();
	void SetYAxisTitle(LPCTSTR);
	short GetYAxisPosition();
	void SetYAxisPosition(short);
	short GetYAxisScaleMode();
	void SetYAxisScaleMode(short);
	unsigned long GetYAxisScaleColor();
	void SetYAxisScaleColor(unsigned long);
	unsigned long GetYAxisTitleColor();
	void SetYAxisTitleColor(unsigned long);
	unsigned long GetYAxisTickLabelColor();
	void SetYAxisTickLabelColor(unsigned long);
	double GetYAxisRangeMin();
	void SetYAxisRangeMin(double);
	double GetYAxisRangeMax();
	void SetYAxisRangeMax(double);
	long GetYAxisSpaceOffset();
	void SetYAxisSpaceOffset(long);
	BOOL GetYAxisVisible();
	void SetYAxisVisible(BOOL);
	BOOL GetYAxisTitleVisible();
	void SetYAxisTitleVisible(BOOL);
	BOOL GetYAxisTickLabelVisible();
	void SetYAxisTickLabelVisible(BOOL);
	BOOL GetYAxisMinorTickVisible();
	void SetYAxisMinorTickVisible(BOOL);
	long GetXAxisSpaceOffset();
	void SetXAxisSpaceOffset(long);
	long GetTargetChannel();
	void SetTargetChannel(long);
	BOOL GetChannelVisible();
	void SetChannelVisible(BOOL);
	CString GetChannelTitle();
	void SetChannelTitle(LPCTSTR);
	unsigned long GetChannelColor();
	void SetChannelColor(unsigned long);
	short GetChannelXAxis();
	void SetChannelXAxis(short);
	short GetChannelYAxis();
	void SetChannelYAxis(short);
	long GetChannelPlotStyle();
	void SetChannelPlotStyle(long);
	long GetChannelLineStyle();
	void SetChannelLineStyle(long);
	long GetChannelLineWidth();
	void SetChannelLineWidth(long);
	long GetChannelMarkerStyle();
	void SetChannelMarkerStyle(long);
	long GetChannelMarkerSize();
	void SetChannelMarkerSize(long);
	unsigned long GetChannelMarkerColor();
	void SetChannelMarkerColor(unsigned long);
	BOOL GetChannelMarkerFill();
	void SetChannelMarkerFill(BOOL);
	BOOL GetLegendVisible();
	void SetLegendVisible(BOOL);
	short GetLegendPosition();
	void SetLegendPosition(short);
	long GetLegendLineLength();
	void SetLegendLineLength(long);
	long GetLegendSpaceGap();
	void SetLegendSpaceGap(long);
	unsigned long GetLegendTextColor();
	void SetLegendTextColor(unsigned long);
	BOOL GetLegendFrameVisible();
	void SetLegendFrameVisible(BOOL);
	BOOL GetLegendFillBackgnd();
	void SetLegendFillBackgnd(BOOL);
	unsigned long GetLegendFrameColor();
	void SetLegendFrameColor(unsigned long);
	unsigned long GetLegendBackColor();
	void SetLegendBackColor(unsigned long);
	long GetLegendPosMarginL();
	void SetLegendPosMarginL(long);
	long GetLegendPosMarginR();
	void SetLegendPosMarginR(long);
	long GetLegendPosMarginT();
	void SetLegendPosMarginT(long);
	long GetLegendPosMarginB();
	void SetLegendPosMarginB(long);
	BOOL GetGradientEnable();
	void SetGradientEnable(BOOL);
	short GetGradientBrightness();
	void SetGradientBrightness(short);
	short GetGradientStyle();
	void SetGradientStyle(short);
	short GetXAxisPrecision();
	void SetXAxisPrecision(short);
	short GetYAxisPrecision();
	void SetYAxisPrecision(short);
	BOOL GetZoomEnabled();
	void SetZoomEnabled(BOOL);
	unsigned long GetSuppFrameColor();
	void SetSuppFrameColor(unsigned long);
	short GetSuppFrameID();
	void SetSuppFrameID(short);
	long GetFrameThick();
	void SetFrameThick(long);
	long GetMaxDataPoints();
	void SetMaxDataPoints(long);
	short GetScrollMode();
	void SetScrollMode(short);
	float GetBlockScrollBoundary();
	void SetBlockScrollBoundary(float);
	BOOL GetDragZoomEnabled();
	void SetDragZoomEnabled(BOOL);
	short GetAxisCtrlMode();
	void SetAxisCtrlMode(short);
	BOOL GetCTBVisible();
	void SetCTBVisible(BOOL);
	short GetCTBBorderStyle();
	void SetCTBBorderStyle(short);
	BOOL GetCTBFlatButton();
	void SetCTBFlatButton(BOOL);
	short GetCTBButtonWidth();
	void SetCTBButtonWidth(short);
	short GetCTBButtonHeight();
	void SetCTBButtonHeight(short);
	long GetCTBItems();
	void SetCTBItems(long);
	BOOL GetXAxisAutoScale();
	void SetXAxisAutoScale(BOOL);
	BOOL GetYAxisAutoScale();
	void SetYAxisAutoScale(BOOL);
	BOOL GetDataStore();
	void SetDataStore(BOOL);
	long GetPlotBufferSize();
	void SetPlotBufferSize(long);
	short GetPlotMode();
	void SetPlotMode(short);

// Operations
public:
	long GetNumberOfXAxis();
	long AddXAxis();
	void DeleteXAxis(short nAxisIndex);
	long GetNumberOfYAxis();
	long AddYAxis();
	void DeleteYAxis(short nAxisIndex);
	void AddPlotChannel(short nXAxisIndex, short nYAxisIndex, unsigned long clColor);
	void DeletePlotChannel(long nChannelIndex);
	long GetNumberOfChannels();
	long GetCursorAttribute(short nCursorNo, short nAttributeID);
	void SetCursorAttribute(short nCursorNo, short nAttributeID, long AttrValue);
	void PlotXY_VT(long nChannel, VARIANT* pXBuffer, short nXDataType, VARIANT* pYBuffer, short nYDataType, long nNumData);
	void DeletePlot(long nChannel);
	long XValueToPixel(short nXAxisIdx, double fXValue);
	long YValueToPixel(short nYAxisIdx, double fYValue);
	void RefreshAll();
	void SetXAxisRange(short nXAxisIdx, double fXMin, double fXMax, short bRedraw);
	void SetYAxisRange(short nYAxisIdx, double fYMin, double fYMax, short bRedraw);
	void PlotY_VT(long nChannel, VARIANT* pYBuffer, short nYDataType, double fXIniVal, double fXIncVal, long nNumData);
	void PlotX_VT(long nChannel, VARIANT* pXBuffer, short nXDataType, double fYIniVal, double fYIncVal, long nNumData);
	void GetCursorValue(short nCursorNo, double* pXVal, double* pYVal);
	void SetCursorValue(short nCursorNo, double fXVal, double fYVal);
	double GetCursorDeltaX();
	double GetCursorDeltaY();
	void UpdatePlot();
	long SaveToTextFile(LPCTSTR szFilePath);
	void SaveToClipboard();
	void PlotChart(long nChannel, double* pXBuf, double* pYBuf, long nNumData);
	void SetChartPause(short bPause);
	short GetChartPause();
	void PlotXY(long nChannel, double* pXBuffer, double* pYBuffer, long nNumData);
	void PlotX(long nChannel, double* pXBuffer, double fYIniVal, double fYIncVal, long nNumData);
	void PlotY(long nChannel, double* pYBuffer, double fXIniVal, double fXIncVal, long nNumData);
	long GetPlotDataX(long nChannel, double* pBuffer, long nCount);
	long GetPlotDataY(long nChannel, double* pBuffer, long nCount);
	void DisableScreenUpdate();
	void EnableScreenUpdate();
	short Print(short bInvertColor);
	void PassKey(long nPassKey);
	long GetPlotaDataNum(long nChannel);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_COMIGRAPH_H__6B3FB032_0DCC_4AF7_9A82_D81DF99A9217__INCLUDED_)
