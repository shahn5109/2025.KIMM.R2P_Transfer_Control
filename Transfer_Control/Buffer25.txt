! Z-CONTROL
GLOBAL REAL OFFSET_FZ, OFFSET_RZ
GLOBAL INT Z_CONTROL_START_FLAG
GLOBAL REAL Z_CONTROL_REL_VEL

REAL AD1_SCALE_FACT; AD1_SCALE_FACT= 1.027273;
REAL AD2_SCALE_FACT; AD2_SCALE_FACT= 1.069767;

REAL CONTROL_KG_MM; CONTROL_KG_MM= 0.007;
REAL CONTROL_FACT; CONTROL_FACT= 0.005;
REAL FZ_DATA, RZ_DATA, FZ_CHA, RZ_CHA;
INT RZ_AXIS, FZ_AXIS;
INT RZ_AD_NO, FZ_AD_NO;
INT CONTROL_1ST
INT CONTROL_CNT

INT CONTROL_CONF_CHK; CONTROL_CONF_CHK= 0
INT CONTROL_CONF_CNT; CONTROL_CONF_CNT= 20
INT CONTROL_MAX_KG; CONTROL_MAX_KG= 30 ! OVER
INT CONTROL_1ST_STOP; CONTROL_1ST_STOP= 0.1

FZ_AXIS= 12; RZ_AXIS= 13 
FZ_AD_NO= 2; RZ_AD_NO= 3; 

OFFSET_FZ= 0.4 OFFSET_RZ= 0.0

Z_CONTROL_RUN= 1; Z_CONTROL_END= 0;
CONTROL_1ST= 0;
CONTROL_CNT= 0;

!EOUT2.10=1
	WAIT 500
EOUT2.10=0
!TEST---------------------------------------
Z_HIST_VAL= 0.1;
Z_CONTROL_GAIN= 0.9

!Z_CONTROL_VAL_F= 5; Z_CONTROL_VAL_R= 5;
!Z_CONTROL_REL_VEL= 0.15
!Z1_CONTROL_FAST_POS= 2.0;	Z2_CONTROL_FAST_POS= 2.0
!Z_CONTROL_UP_VEL= 2.0
!Z_CONTROL_DOWN_VEL= 2.0
!Z_CONTROL_UP_DELAY= 1000

Z_CONTROL_START_FLAG= 1
Z_CONTROL_FLAG= 1
CONTROL_1ST_STOP= 1.1
!---------------------------------------
IF Z_CONTROL_DOWN_VEL< 0; Z_CONTROL_DOWN_VEL= 0.05; END;
IF Z_CONTROL_DOWN_VEL> 10.0; Z_CONTROL_DOWN_VEL= 5.0; END;
IF Z_CONTROL_UP_VEL< 0; Z_CONTROL_UP_VEL= 0.05; END;
IF Z_CONTROL_UP_VEL> 10.0; Z_CONTROL_UP_VEL= 5.0; END;
IF Z_CONTROL_REL_VEL< 0; Z_CONTROL_REL_VEL= 0.05; END;
IF Z_CONTROL_REL_VEL> 1.0; Z_CONTROL_REL_VEL= 1.0; END;

IF Z1_CONTROL_FAST_POS> 11; Z1_CONTROL_FAST_POS= 11; END;
IF Z2_CONTROL_FAST_POS> 11; Z2_CONTROL_FAST_POS= 11; END;

VEL(FZ_AXIS)=Z_CONTROL_DOWN_VEL; ACC(FZ_AXIS)=VEL(FZ_AXIS)*5; DEC(FZ_AXIS)=ACC(FZ_AXIS); JERK(FZ_AXIS) = ACC(FZ_AXIS) * 10; KDEC(FZ_AXIS)=JERK(FZ_AXIS); 
VEL(RZ_AXIS)=Z_CONTROL_DOWN_VEL; ACC(RZ_AXIS)=VEL(RZ_AXIS)*5; DEC(RZ_AXIS)=ACC(RZ_AXIS); JERK(RZ_AXIS) = ACC(RZ_AXIS) * 10; KDEC(RZ_AXIS)=JERK(RZ_AXIS); 

DISP "Z_CONTROL START...!"
STOP 30; 	START 30,1;	WAIT 500
EOUT2.10=0

INT CKTIME
CKTIME= TIME;
IF Z_CONTROL_START_FLAG & CONTROL_1ST= 0
	PTP FZ_AXIS, Z1_CONTROL_FAST_POS; PTP/e RZ_AXIS, Z2_CONTROL_FAST_POS; 
	WHILE MST(RZ_AXIS).#MOVE | MST(FZ_AXIS).#MOVE
		IF AIN(FZ_AD_NO) > 5.0 | AIN(RZ_AD_NO) > 5.0
			HALT RZ_AXIS; 		HALT FZ_AXIS; 
			DISP "PTP : Z1-Z2 OVER (5KG)";	Z_CONTROL_RUN= 0;	GOTO END_RTN;
		END
		IF Z_CONTROL_START_FLAG= 0
			HALT RZ_AXIS; 	HALT FZ_AXIS; 	Z_CONTROL_RUN= 0;	DISP "User-Stop : END!";		GOTO END_RTN;
		END
		IF TIME - CKTIME > 10000
			HALT RZ_AXIS; 	HALT FZ_AXIS; 	Z_CONTROL_RUN= 0;	DISP "Time-Out : END!";		GOTO END_RTN;
		END
	END
END
TILL ^MST(RZ_AXIS).#MOVE;  TILL ^MST(FZ_AXIS).#MOVE

IF AIN(FZ_AD_NO) > 5.0 | AIN(RZ_AD_NO) > 5.0
	DISP "Z1-Z2 OVER (5KG)";	Z_CONTROL_RUN= 0;	GOTO END_RTN;
END
VEL(FZ_AXIS)=2.0; ACC(FZ_AXIS)=100; DEC(FZ_AXIS)=ACC(FZ_AXIS); JERK(FZ_AXIS) = ACC(FZ_AXIS) * 10; KDEC(FZ_AXIS)=JERK(FZ_AXIS); 
VEL(RZ_AXIS)=2.0; ACC(RZ_AXIS)=100; DEC(RZ_AXIS)=ACC(RZ_AXIS); JERK(RZ_AXIS) = ACC(RZ_AXIS) * 10; KDEC(RZ_AXIS)=JERK(RZ_AXIS); 

!EOUT2.10=1

IF EOUT2.10
	HALT RZ_AXIS; 		HALT FZ_AXIS; 
	DISP "I/O Error!";		Z_CONTROL_RUN= 0;		GOTO END_RTN;
END
IF Z_CONTROL_START_FLAG & CONTROL_1ST= 0
	IF AIN(FZ_AD_NO) < 2.0 & AIN(RZ_AD_NO) < 2.0
		JOG/V FZ_AXIS, Z_CONTROL_REL_VEL; JOG/V RZ_AXIS, Z_CONTROL_REL_VEL; 
	ELSE
		CONTROL_1ST= 1
		DISP "1st 2kg over!"
	END
END

WHILE(1)
START_RTN:
	IF Z_CONTROL_START_FLAG= 0
		HALT RZ_AXIS; 		HALT FZ_AXIS; 
		Z_CONTROL_RUN= 0
		DISP "User-Stop : END!"
		GOTO END_RTN;
	END

	CONTROL_FACT = CONTROL_KG_MM * Z_CONTROL_GAIN;
	FZ_DATA= AD_FZ;		RZ_DATA= AD_RZ;
	FZ_DATA= AIN(FZ_AD_NO)-OFFSET_FZ;	RZ_DATA= AIN(RZ_AD_NO)-OFFSET_RZ;
	IF Z_CONTROL_FLAG = 0;	GOTO END_RTN;	END;
	FZ_CHA= Z_CONTROL_VAL_F - FZ_DATA;	RZ_CHA= Z_CONTROL_VAL_R - RZ_DATA;
	
	IF AIN(FZ_AD_NO) > CONTROL_MAX_KG | AIN(RZ_AD_NO) > CONTROL_MAX_KG 
		HALT(RZ_AXIS, FZ_AXIS); 
		DISP "Z1-Z2 OVER (100KG)"
		Z_CONTROL_RUN= 0
		GOTO END_RTN;
	END
	IF FZ_DATA= 0 & RZ_DATA= 0
		HALT RZ_AXIS; 		HALT FZ_AXIS; 
		Z_CONTROL_RUN= 0
		DISP "A/D READ-ERROR!"
		GOTO END_RTN;
	END
	IF ^MST(RZ_AXIS).#ENABLED | ^MST(FZ_AXIS).#ENABLED
		HALT(RZ_AXIS, FZ_AXIS); 
		Z_CONTROL_RUN= 0
		DISP "SERVO-ERROR!"
		GOTO END_RTN;
	END
	FZ_DATA= AD_FZ;		RZ_DATA= AD_RZ;
	IF Z_CONTROL_START_FLAG & CONTROL_1ST= 0
		IF AIN(FZ_AD_NO) > CONTROL_1ST_STOP | AIN(RZ_AD_NO) > CONTROL_1ST_STOP
!		IF FZ_DATA > CONTROL_1ST_STOP | RZ_DATA > CONTROL_1ST_STOP
			HALT(RZ_AXIS, FZ_AXIS); 
			CONTROL_1ST= 1;
			VEL(FZ_AXIS)=2.0; ACC(FZ_AXIS)=VEL(FZ_AXIS)*10; DEC(FZ_AXIS)=ACC(FZ_AXIS); JERK(FZ_AXIS) = ACC(FZ_AXIS) * 10; KDEC(FZ_AXIS)=JERK(FZ_AXIS); 
			VEL(RZ_AXIS)=2.0; ACC(RZ_AXIS)=VEL(RZ_AXIS)*10; DEC(RZ_AXIS)=ACC(RZ_AXIS); JERK(RZ_AXIS) = ACC(RZ_AXIS) * 10; KDEC(RZ_AXIS)=JERK(RZ_AXIS); 
			DISP "Step Move!"
		END
		GOTO START_RTN;
	END
	IF Z_CONTROL_START_FLAG & CONTROL_1ST
		IF ^MST(FZ_AXIS).#MOVE & ^MST(RZ_AXIS).#MOVE
			WAIT 200
			FZ_DATA= AD_FZ;		RZ_DATA= AD_RZ;
			FZ_DATA= (AIN(FZ_AD_NO)*AD1_SCALE_FACT);	RZ_DATA= (AIN(RZ_AD_NO)*AD2_SCALE_FACT);
			IF Z_CONTROL_FLAG = 0;	GOTO END_RTN;	END;
			FZ_CHA= Z_CONTROL_VAL_F - FZ_DATA;	RZ_CHA= Z_CONTROL_VAL_R - RZ_DATA;
			
			IF DEADZONE(FZ_CHA, Z_HIST_VAL) <> 0 | DEADZONE(RZ_CHA, Z_HIST_VAL) <> 0
			
				IF CONTROL_CNT> 0
					CONTROL_CNT= 0
					IF DEADZONE(RZ_CHA, Z_HIST_VAL) <> 0
						PTP/R RZ_AXIS, (RZ_CHA * CONTROL_FACT)
						!PTP/R FZ_AXIS, -(RZ_CHA*0.3) * CONTROL_FACT
						DISP "AD_F= ", AIN(FZ_AD_NO), "AD_R= ", AIN(RZ_AD_NO), "RZ= ", RZ_CHA, "F= ", -(RZ_CHA*0.3)
					END
				ELSE
					CONTROL_CNT= 1
					IF DEADZONE(FZ_CHA, Z_HIST_VAL) <> 0
						PTP/R FZ_AXIS, (FZ_CHA * CONTROL_FACT)
						!PTP/R RZ_AXIS, -(FZ_CHA*0.3) * CONTROL_FACT
						DISP "AD_F= ", AIN(FZ_AD_NO), "AD_R= ", AIN(RZ_AD_NO), "FZ= ", FZ_CHA, "R= ", -(FZ_CHA*0.3)
					END
				END
			ELSE 
				Z_CONTROL_RUN= 9;
			END
			IF Z_CONTROL_RUN= 9
				CONTROL_CONF_CNT= CONTROL_CONF_CNT + 1
				IF CONTROL_CONF_CNT > CONTROL_CONF_CHK
					GOTO END_RTN
				END
			END
		END
	END
	WAIT 10
END


END_RTN:
	HALT RZ_AXIS; 		HALT FZ_AXIS; 
	DISP "Z_CONTROL END...!"
	WAIT Z_CONTROL_UP_DELAY
	
	VEL(FZ_AXIS)=Z_CONTROL_UP_VEL; ACC(FZ_AXIS)=VEL(FZ_AXIS)*5; DEC(FZ_AXIS)=ACC(FZ_AXIS); JERK(FZ_AXIS) = ACC(FZ_AXIS) * 10; KDEC(FZ_AXIS)=JERK(FZ_AXIS); 
	VEL(RZ_AXIS)=Z_CONTROL_UP_VEL; ACC(RZ_AXIS)=VEL(RZ_AXIS)*5; DEC(RZ_AXIS)=ACC(RZ_AXIS); JERK(RZ_AXIS) = ACC(RZ_AXIS) * 10; KDEC(RZ_AXIS)=JERK(RZ_AXIS); 
	PTP FZ_AXIS, 0.0; PTP/e RZ_AXIS, 0.0; 

	Z_CONTROL_END= 9;
STOP
